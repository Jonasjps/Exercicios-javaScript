"use strict";
/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CSS_SANITIZER_TABLE = exports.DEFAULT_SANITIZER_TABLE = void 0;
/* GENERATED CODE, DO NOT MODIFY */
const pure_js_1 = require("../../../internals/pure.js");
const sanitizer_table_js_1 = require("./sanitizer_table.js");
const ALLOWED_ELEMENTS = [
    'ARTICLE',
    'SECTION',
    'NAV',
    'ASIDE',
    'H1',
    'H2',
    'H3',
    'H4',
    'H5',
    'H6',
    'HEADER',
    'FOOTER',
    'ADDRESS',
    'P',
    'HR',
    'PRE',
    'BLOCKQUOTE',
    'OL',
    'UL',
    'LH',
    'LI',
    'DL',
    'DT',
    'DD',
    'FIGURE',
    'FIGCAPTION',
    'MAIN',
    'DIV',
    'EM',
    'STRONG',
    'SMALL',
    'S',
    'CITE',
    'Q',
    'DFN',
    'ABBR',
    'RUBY',
    'RB',
    'RT',
    'RTC',
    'RP',
    'DATA',
    'TIME',
    'CODE',
    'VAR',
    'SAMP',
    'KBD',
    'SUB',
    'SUP',
    'I',
    'B',
    'U',
    'MARK',
    'BDI',
    'BDO',
    'SPAN',
    'BR',
    'WBR',
    'INS',
    'DEL',
    'PICTURE',
    'PARAM',
    'TRACK',
    'MAP',
    'TABLE',
    'CAPTION',
    'COLGROUP',
    'COL',
    'TBODY',
    'THEAD',
    'TFOOT',
    'TR',
    'TD',
    'TH',
    'SELECT',
    'DATALIST',
    'OPTGROUP',
    'OPTION',
    'OUTPUT',
    'PROGRESS',
    'METER',
    'FIELDSET',
    'LEGEND',
    'DETAILS',
    'SUMMARY',
    'MENU',
    'DIALOG',
    'SLOT',
    'CANVAS',
    'FONT',
    'CENTER',
    'ACRONYM',
    'BASEFONT',
    'BIG',
    'DIR',
    'HGROUP',
    'STRIKE',
    'TT',
];
const ELEMENT_POLICIES = [
    [
        'A',
        new Map([
            [
                'href',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_SANITIZE_URL,
                },
            ],
        ]),
    ],
    [
        'AREA',
        new Map([
            [
                'href',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_SANITIZE_URL,
                },
            ],
        ]),
    ],
    [
        'LINK',
        new Map([
            [
                'href',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY,
                    conditions: new Map([
                        [
                            'rel',
                            new Set([
                                'alternate',
                                'author',
                                'bookmark',
                                'canonical',
                                'cite',
                                'help',
                                'icon',
                                'license',
                                'next',
                                'prefetch',
                                'dns-prefetch',
                                'prerender',
                                'preconnect',
                                'preload',
                                'prev',
                                'search',
                                'subresource',
                            ]),
                        ],
                    ]),
                },
            ],
        ]),
    ],
    [
        'SOURCE',
        new Map([
            [
                'src',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY,
                },
            ],
            [
                'srcset',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY_FOR_SRCSET,
                },
            ],
        ]),
    ],
    [
        'IMG',
        new Map([
            [
                'src',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY,
                },
            ],
            [
                'srcset',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY_FOR_SRCSET,
                },
            ],
        ]),
    ],
    [
        'VIDEO',
        new Map([
            [
                'src',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY,
                },
            ],
        ]),
    ],
    [
        'AUDIO',
        new Map([
            [
                'src',
                {
                    policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_USE_RESOURCE_URL_POLICY,
                },
            ],
        ]),
    ],
];
const ALLOWED_GLOBAL_ATTRIBUTES = [
    'title',
    'aria-atomic',
    'aria-autocomplete',
    'aria-busy',
    'aria-checked',
    'aria-current',
    'aria-disabled',
    'aria-dropeffect',
    'aria-expanded',
    'aria-haspopup',
    'aria-hidden',
    'aria-invalid',
    'aria-label',
    'aria-level',
    'aria-live',
    'aria-multiline',
    'aria-multiselectable',
    'aria-orientation',
    'aria-posinset',
    'aria-pressed',
    'aria-readonly',
    'aria-relevant',
    'aria-required',
    'aria-selected',
    'aria-setsize',
    'aria-sort',
    'aria-valuemax',
    'aria-valuemin',
    'aria-valuenow',
    'aria-valuetext',
    'alt',
    'align',
    'autocapitalize',
    'autocomplete',
    'autocorrect',
    'autofocus',
    'autoplay',
    'bgcolor',
    'border',
    'cellpadding',
    'cellspacing',
    'checked',
    'color',
    'cols',
    'colspan',
    'controls',
    'datetime',
    'disabled',
    'download',
    'draggable',
    'enctype',
    'face',
    'formenctype',
    'frameborder',
    'height',
    'hreflang',
    'hidden',
    'ismap',
    'label',
    'lang',
    'loop',
    'max',
    'maxlength',
    'media',
    'minlength',
    'min',
    'multiple',
    'muted',
    'nonce',
    'open',
    'placeholder',
    'preload',
    'rel',
    'required',
    'reversed',
    'role',
    'rows',
    'rowspan',
    'selected',
    'shape',
    'size',
    'sizes',
    'slot',
    'span',
    'spellcheck',
    'start',
    'step',
    'summary',
    'translate',
    'type',
    'valign',
    'value',
    'width',
    'wrap',
    'itemscope',
    'itemtype',
    'itemid',
    'itemprop',
    'itemref',
];
const GLOBAL_ATTRIBUTE_POLICIES = [
    [
        'dir',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_NORMALIZE,
            conditions: /* #__PURE__ */ (0, pure_js_1.pure)(() => {
                return new Map([
                    ['dir', new Set(['auto', 'ltr', 'rtl'])],
                ]);
            }),
        },
    ],
    [
        'async',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_NORMALIZE,
            conditions: /* #__PURE__ */ (0, pure_js_1.pure)(() => {
                return new Map([
                    ['async', new Set(['async'])],
                ]);
            }),
        },
    ],
    [
        'cite',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_SANITIZE_URL,
        },
    ],
    [
        'loading',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_NORMALIZE,
            conditions: /* #__PURE__ */ (0, pure_js_1.pure)(() => {
                return new Map([
                    ['loading', new Set(['eager', 'lazy'])],
                ]);
            }),
        },
    ],
    [
        'poster',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_SANITIZE_URL,
        },
    ],
    [
        'target',
        {
            policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_NORMALIZE,
            conditions: /* #__PURE__ */ (0, pure_js_1.pure)(() => {
                return new Map([
                    ['target', new Set(['_self', '_blank'])],
                ]);
            }),
        },
    ],
];
/**
 * Sanitizer table for the default sanitizer configuration
 *
 */
exports.DEFAULT_SANITIZER_TABLE = new sanitizer_table_js_1.SanitizerTable(new Set(ALLOWED_ELEMENTS), new Map(ELEMENT_POLICIES), new Set(ALLOWED_GLOBAL_ATTRIBUTES), new Map(GLOBAL_ATTRIBUTE_POLICIES));
/**
 * Sanitizer table used by the CSS sanitizer.
 */
exports.CSS_SANITIZER_TABLE = new sanitizer_table_js_1.SanitizerTable(new Set(/* #__PURE__ */ (0, pure_js_1.pure)(() => ALLOWED_ELEMENTS.concat(['STYLE']))), new Map(ELEMENT_POLICIES), 
// We allow id, name, and class because they can be used in CSS selectors.
// Shadow DOM ensures that those names don't clash with other names in the
// document.
new Set(
/* #__PURE__ */ (0, pure_js_1.pure)(() => ALLOWED_GLOBAL_ATTRIBUTES.concat(['id', 'name', 'class']))), new Map(
/* #__PURE__ */ (0, pure_js_1.pure)(() => GLOBAL_ATTRIBUTE_POLICIES.concat([
    [
        'style',
        { policyAction: sanitizer_table_js_1.AttributePolicyAction.KEEP_AND_SANITIZE_STYLE },
    ],
]))));
