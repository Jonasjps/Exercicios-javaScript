/**
 * @license
 * SPDX-License-Identifier: Apache-2.0
 */
/** @fileoverview Internal implementations of SafeAttributePrefix. */
import '../environment/dev.js';
/**
 * A prefix with which an attribute is safe to set using plain strings.
 */
export declare class SafeAttributePrefix {
    private readonly privateDoNotAccessOrElseWrappedAttributePrefix;
    private constructor();
    toString(): string;
}
/**
 * Builds a new `SafeAttributePrefix` from the given string, without enforcing
 * safety guarantees. This shouldn't be exposed to application developers, and
 * must only be used as a step towards safe builders or safe constants.
 */
export declare function createAttributePrefixInternal(value: string): SafeAttributePrefix;
/**
 * Checks if the given value is a `SafeAttributePrefix` instance.
 */
export declare function isAttributePrefix(value: unknown): value is SafeAttributePrefix;
/**
 * Returns the string value of the passed `SafeAttributePrefix` object while
 * ensuring it has the correct type.
 */
export declare function unwrapAttributePrefix(value: SafeAttributePrefix): string;
